{"version":3,"file":"index.js","names":["pseudoLocalization","mutationObserverOpts","blacklistedNodeNames","opts","strategy","enabled","observer","observerConfig","characterData","childList","subtree","textNodesUnder","element","walker","document","createTreeWalker","NodeFilter","SHOW_TEXT","node","isAllWhitespace","nodeValue","test","FILTER_REJECT","isBlacklistedNode","parentElement","includes","nodeName","FILTER_ACCEPT","currNode","textNodes","nextNode","push","isNonEmptyString","str","pseudoLocalize","textNodesUnderElement","textNode","pseudoLocalizeString","domMutationCallback","mutationsList","mutation","type","addedNodes","length","disconnect","forEach","observe","body","target","isEnabled","start","console","error","MutationObserver","stop","localize"],"sources":["../../src/index.ts"],"sourcesContent":["import pseudoLocalizeString, {\n  PseudoLocalizeStringOptions,\n} from './localize.js';\n\n/**\n * export the underlying pseudo localization function so this import style\n *  import { localize } from 'pseudo-localization';\n * can be used.\n */\nexport { default as localize } from './localize.js';\n\ntype MutationObserverCallbackOptions = {\n  blacklistedNodeNames?: string[];\n};\n\ntype StartOptions = MutationObserverCallbackOptions &\n  PseudoLocalizeStringOptions;\n\nconst pseudoLocalization = (() => {\n  const mutationObserverOpts = {\n    blacklistedNodeNames: ['STYLE'],\n  };\n\n  const opts: PseudoLocalizeStringOptions = {\n    strategy: 'accented',\n  };\n\n  // Indicates whether the pseudo-localization is currently enabled.\n  let enabled = false;\n\n  // Observer for dom updates. Initialization is defered to make parts\n  // of the API safe to use in non-browser environments like nodejs\n  let observer: MutationObserver | null = null;\n  const observerConfig = {\n    characterData: true,\n    childList: true,\n    subtree: true,\n  };\n\n  const textNodesUnder = (element: Node) => {\n    const walker = document.createTreeWalker(\n      element,\n      NodeFilter.SHOW_TEXT,\n      node => {\n        const isAllWhitespace = node.nodeValue && !/[^\\s]/.test(node.nodeValue);\n        if (isAllWhitespace) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        const isBlacklistedNode =\n          node.parentElement &&\n          mutationObserverOpts.blacklistedNodeNames.includes(\n            node.parentElement.nodeName\n          );\n        if (isBlacklistedNode) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        return NodeFilter.FILTER_ACCEPT;\n      }\n    );\n\n    let currNode;\n    const textNodes = [];\n    while ((currNode = walker.nextNode())) textNodes.push(currNode);\n    return textNodes;\n  };\n\n  const isNonEmptyString = (str: unknown): str is string =>\n    !!str && typeof str === 'string';\n\n  const pseudoLocalize = (element: Node) => {\n    const textNodesUnderElement = textNodesUnder(element);\n    for (let textNode of textNodesUnderElement) {\n      const nodeValue = textNode.nodeValue;\n      if (isNonEmptyString(nodeValue)) {\n        textNode.nodeValue = pseudoLocalizeString(nodeValue, opts);\n      }\n    }\n  };\n\n  const domMutationCallback: MutationCallback = mutationsList => {\n    if (!observer) {\n      return;\n    }\n    for (let mutation of mutationsList) {\n      if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {\n        // Turn the observer off while performing dom manipulation to prevent\n        // infinite dom mutation callback loops\n        observer.disconnect();\n        // For every node added, recurse down it's subtree and convert\n        // all children as well\n        mutation.addedNodes.forEach(pseudoLocalize);\n        observer.observe(document.body, observerConfig);\n      } else if (mutation.type === 'characterData') {\n        const nodeValue = mutation.target.nodeValue;\n        const isBlacklistedNode =\n          !!mutation.target.parentElement &&\n          mutationObserverOpts.blacklistedNodeNames.includes(\n            mutation.target.parentElement.nodeName\n          );\n        if (isNonEmptyString(nodeValue) && !isBlacklistedNode) {\n          // Turn the observer off while performing dom manipulation to prevent\n          // infinite dom mutation callback loops\n          observer.disconnect();\n          // The target will always be a text node so it can be converted\n          // directly\n          mutation.target.nodeValue = pseudoLocalizeString(nodeValue, opts);\n          observer.observe(document.body, observerConfig);\n        }\n      }\n    }\n  };\n\n  const isEnabled = () => {\n    return enabled;\n  };\n\n  const start = ({\n    strategy = 'accented',\n    blacklistedNodeNames = mutationObserverOpts.blacklistedNodeNames,\n  }: StartOptions = {}) => {\n    if (isEnabled()) {\n      console.error('pseudo-localization is already enabled');\n      return;\n    }\n\n    mutationObserverOpts.blacklistedNodeNames = blacklistedNodeNames;\n    opts.strategy = strategy;\n    // Pseudo localize the DOM\n    pseudoLocalize(document.body);\n    // Start observing the DOM for changes and run\n    // pseudo localization on any added text nodes\n    observer = new MutationObserver(domMutationCallback);\n    observer.observe(document.body, observerConfig);\n    enabled = true;\n  };\n\n  const stop = () => {\n    if (!isEnabled()) {\n      console.error('pseudo-localization is already disabled');\n      return;\n    }\n\n    observer && observer.disconnect();\n    enabled = false;\n  };\n\n  return {\n    start,\n    stop,\n    isEnabled,\n    localize: pseudoLocalizeString,\n  };\n})();\n\nexport default pseudoLocalization;\n"],"mappings":"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"}